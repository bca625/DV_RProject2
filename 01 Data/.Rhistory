labs(x="DISEASE", y=paste("PAYMENT")) +
layer(data=Texas,
mapping=aes(x=MEASURE_NAME, y=as.numeric(as.character(PAYMENT)), color=(as.character(MEASURE_NAME), title="Foo")),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
labs(title='Hospital Payments by Disease') +
labs(x="DISEASE", y=paste("PAYMENT")) +
layer(data=Texas,
mapping=aes(x=MEASURE_NAME, y=as.numeric(as.character(PAYMENT)), color=as.character(MEASURE_NAME)),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
labs(title='Hospital Payments by Disease') +
labs(x="DISEASE", y=paste("PAYMENT")) +
layer(data=Texas,
mapping=aes(x=MEASURE_NAME, y=as.numeric(as.character(PAYMENT)), color=MEASURE_NAME),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
Texas <- hospitals %>% select(CITY, STATE, PAYMENT, MEASURE_NAME) %>% rename(Measure Name = MEASURE_NAME) %>% filter(STATE == "TX") %>% View
Texas <- hospitals %>% select(CITY, STATE, PAYMENT, MEASURE_NAME) %>% rename(MeasureName = MEASURE_NAME) %>% filter(STATE == "TX") %>% View
Texas <- hospitals %>% select(CITY, STATE, PAYMENT, MEASURE_NAME) %>% rename(Measure = MEASURE_NAME) %>% filter(STATE == "TX") %>% View
Texas <- hospitals %>% select(CITY, STATE, PAYMENT, MEASURE_NAME) %>% rename(Measure = MEASURE_NAME) %>% filter(STATE == "TX") %>% tbl_df
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
labs(title='Hospital Payments by Disease') +
labs(x="DISEASE", y=paste("PAYMENT")) +
layer(data=Texas,
mapping=aes(x=Measure, y=as.numeric(as.character(PAYMENT)), color= Measure),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
help(ggplot)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
labs(title='Hospital Payments by Disease in Texas') +
labs(x="DISEASE", y=paste("PAYMENT")) +
layer(data=Texas,
mapping=aes(x=Measure, y=as.numeric(as.character(PAYMENT)), color= Measure),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
geom_hline(yintercept=20000),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
labs(title='Hospital Payments by Disease in Texas') +
labs(x="DISEASE", y=paste("PAYMENT")) +
layer(data=Texas,
mapping=aes(x=Measure, y=as.numeric(as.character(PAYMENT)), color= Measure),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
p + geom_hline(yintercept=20000),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
hist(hospitals$PAYMENT)
hist(hospitals$PAYMENT[hospitals$STATE == "TX"])
help(hist)
hist(hospitals$PAYMENT[hospitals$STATE == "TX", hospitals$CITY == "Austin"] )
hist(hospitals$PAYMENT[hospitals$STATE == "TX" AND hospitals$CITY == "Austin"])
hist(hospitals$PAYMENT[hospitals$STATE == "TX"; hospitals$CITY == "Austin"])
hist(hospitals$PAYMENT[hospitals$STATE == "TX"])
hist(hospitals$PAYMENT[hospitals$STATE == "TX"], xlab="Payment in $", main="Frequency Distrubutio of Hopital Payments in Texas")
hist(hospitals$PAYMENT[hospitals$STATE == "TX"], xlab="Payment in Dollars", main="Frequency Distrubutio of Hopital Payments in Texas")
hist(hospitals$PAYMENT[hospitals$STATE == "TX"], xlab="Payment in Dollars", main="Frequency Distrubutio of Hopital Payments in Texas", col="orange")
hist(hospitals$PAYMENT[hospitals$STATE == "TX"], xlab="Payment in Dollars", main="Frequency Distrubution of Hospital Payments in Texas", col="orange")
require(maps)
require("maps")
require("ggmaps")
require("ggmap")
install.packages("maps")
require("maps")
states <- map_data("state")
states
head(states)
hospitals$STATE <- hospitals$stateName
View(hospitals)
hospitals <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from hospitalpayments"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_ba7433', PASS='orcl_ba7433', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
stastdist <- hostpitals$STATE
stastdist <- hospitals$STATE
stastdist$state <- hospitals$STATE
statedist$state <- hospitals$STATE
statedist <- hospitals
statedist = hospitals
view(statedist)
dist <- hospitals
dist$region <- hospitals$STATE
View(dist)
Total = merge(states, dist, by='region')
head(total)
head(Total)
p <- ggplot()
p <- p + geom_polygon(data=Total, aes(x=long, y=lat, group = group, fill=Total$bwRatio),colour="white"
) + scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar")
P1 <- p + theme_bw()  + labs(fill = "Black to White Incarceration Rates \n Weighted by Relative Population"
,title = "State Incarceration Rates by Race, 2010", x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
Total = merge(states, dist, by='STATE')
Total = merge(states, dist, by=STATE)
Total = merge(states, dist, by="STATE")
Total = merge(states, dist, by=region)
Total = merge(states, dist, by="region")
p <- ggplot()
p <- p + geom_polygon(data=Total, aes(x=long, y=lat, group = group, fill=Total$bwRatio),colour="white"
) + scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar")
P1 <- p + theme_bw()  + labs(fill = "Black to White Incarceration Rates \n Weighted by Relative Population"
,title = "State Incarceration Rates by Race, 2010", x="", y="")
P1 + scale_y_continuous(breaks=c()) + scale_x_continuous(breaks=c()) + theme(panel.border =  element_blank())
View(hospitals)
---
output: html_document
---
Data Visualization Project 2: Heart Attack and Pneumonia Patient Analysis
===
**Bryan Amaefule, Kevin Lee, Shannon Lu**
The data we selected for our project shows various information about heart attack and pneumonia patients around the United States. In our project we analyze the frequency and distribution of the payments made by patients with respect to their loaction and disease that they are being treated for.
To begin, we loaded the required packages from a file called .TestProfile
```{r, warning=FALSE, message=FALSE }
source("../02 Visualizations/.TestProfile", echo=TRUE)
```
First, we load the dataset into R and give you an peak at how the dataset is sturctured
```{r, warning=FALSE, message=FALSE}
hospitals <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from hospitalpayments"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_ba7433', PASS='orcl_ba7433', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
```
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
labs(title='Hospital Payments by Disease in Texas') +
labs(x="DISEASE", y=paste("PAYMENT")) +
layer(data=hospitals,
mapping=aes(x=Measure, y=as.numeric(as.character(PAYMENT)), color= Measure),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
labs(title='Hospital Payments by Disease in Texas') +
labs(x="DISEASE", y=paste("PAYMENT")) +
layer(data=hospitals,
mapping=aes(x=Measure, y=as.numeric(as.character(PAYMENT)), color= MEASURE_NAME),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
labs(title='Hospital Payments by Disease in Texas') +
labs(x="DISEASE", y=paste("PAYMENT")) +
layer(data=hospitals,
mapping=aes(x=MEASURE_NAME, y=as.numeric(as.character(PAYMENT)), color= MEASURE_NAME),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
States2 <- hospitals %>% select(HOSPITAL_NAME, STATE, PAYMENT,LOWER_ESTIMATE, LOCATION) %>% mutate(Payment_percent = cume_dist(PAYMENT),Overpaid_amt = PAYMENT - LOWER_ESTIMATE) %>% filter(Payment_percent <= 0.1)
View(States2)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
labs(title='Hospital Payments by Disease in Texas') +
labs(x="Overpaid Amount", y=paste("PAYMENT")) +
layer(data=hospitals,
mapping=aes(x=Overpaid_amt, y=as.numeric(as.character(PAYMENT))),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
labs(title='Hospital Payments by Disease in Texas') +
labs(x="Overpaid Amount", y=paste("PAYMENT")) +
layer(data=States2,
mapping=aes(x=Overpaid_amt, y=as.numeric(as.character(PAYMENT))),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
labs(title='Hospital Payments by Disease in Texas') +
labs(x=paste("PAYMENT"), y="Overpaid Amount") +
layer(data=States2,
mapping=aes(x=as.numeric(as.character(PAYMENT)), y=Overpaid_amt),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
labs(title='Hospital Payments by Disease in Texas') +
labs(x="DISEASE", y=paste("PAYMENT")) +
layer(data=hospitals,
mapping=aes(x=MEASURE_NAME, y=as.numeric(as.character(PAYMENT)), color= MEASURE_NAME),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
View(hospitals)
hist(hospitals$PAYMENT[hospitals$STATE == "TX"], xlab="Payment in Dollars", main="Frequency Distrubution of Hospital Payments in Texas", col="orange")
hist(hospitals$PAYMENT[hospitals$STATE == "TX" & hospitals$CITY == "Houston"], xlab="Payment in Dollars", main="Frequency Distrubution of Hospital Payments in Texas", col="orange")
hist(hospitals$PAYMENT[(hospitals$STATE == "TX") and (hospitals$CITY == "Houston")], xlab="Payment in Dollars", main="Frequency Distrubution of Hospital Payments in Texas", col="orange")
hist(hospitals$PAYMENT[hospitals$STATE == "TX"], xlab="Payment in Dollars", main="Frequency Distrubution of Hospital Payments in Texas", col="orange")
TexHA <- hospitals$PAYMENT[hospitals$STATE == "TX"]
hist(TexHA$PAYMENT[TexHA$CITY == "HOUSTON"], xlab="Payment in Dollars", main="Frequency Distrubution of Hospital Payments in Texas", col="orange")
hist(hospitals$PAYMENT[hospitals$STATE == "TX"], xlab="Payment in Dollars", main="Frequency Distrubution of Hospital Payments in Texas", col="orange")
View(states)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
facet(CITY, labeller=label_both) +
labs(title='Titanic') +
labs(x="SURVIVED", y=paste("FARE")) +
layer(data=HSD,
mapping=aes(x=MEASURE_NAME, y=PAYMENT), color=MEASURE_NAME),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
facet(CITY, labeller=label_both) +
labs(title='Titanic') +
labs(x="SURVIVED", y=paste("FARE")) +
layer(data=HSD,
mapping=aes(x=MEASURE_NAME, y=PAYMENT, color=MEASURE_NAME),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
View(HSD)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
facet_wrap(~CITY, labeller=label_both) +
labs(title='Titanic') +
labs(x="SURVIVED", y=paste("FARE")) +
layer(data=HSD,
mapping=aes(x=MEASURE_NAME, y=PAYMENT, color=MEASURE_NAME),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
facet_wrap(~CITY) +
labs(title='Titanic') +
labs(x="SURVIVED", y=paste("FARE")) +
layer(data=HSD,
mapping=aes(x=MEASURE_NAME, y=PAYMENT, color=MEASURE_NAME),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
View(HSD)
HSD <- hospitals %>% select(CITY, STATE, PAYMENT, MEASURE_NAME) %>% filter(STATE == "TX", CITY %in% c("HOUSTON", "SAN ANTONIO", "DALLAS" ))
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
facet_wrap(~CITY) +
labs(title='Titanic') +
labs(x="SURVIVED", y=paste("FARE")) +
layer(data=HSD,
mapping=aes(x=MEASURE_NAME, y=PAYMENT, color=MEASURE_NAME),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
ggplot() +
coord_cartesian() +
scale_x_discrete(breaks=NULL) +
scale_y_continuous() +
facet_wrap(~CITY) +
labs(title='Titanic') +
labs(x="SURVIVED", y=paste("FARE")) +
layer(data=HSD,
mapping=aes(x=MEASURE_NAME, y=PAYMENT, color=MEASURE_NAME),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
hospitals2 <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from hospitalpayments"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_ba7433', PASS='orcl_ba7433', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
labs(title='Hospital Payments by Disease in Texas') +
labs(x=paste("PAYMENT"), y="Overpaid Amount") +
layer(data=States2,
mapping=aes(x=as.numeric(as.character(PAYMENT)), y=Overpaid_amt),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
overpaid <- hospitals %>% select(HOSPITAL_NAME, STATE, PAYMENT,LOWER_ESTIMATE, LOCATION, MEASURE_NAME) %>% mutate(Payment_percent = cume_dist(PAYMENT),Overpaid_amt = PAYMENT - LOWER_ESTIMATE) %>% filter(Payment_percent <= 0.1)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
labs(title='Hospital Payments by Disease in Texas') +
labs(x=paste("PAYMENT"), y="Overpaid Amount") +
layer(data=States2,
mapping=aes(x=as.numeric(as.character(PAYMENT)), y=Overpaid_amt, color=MEASURE_NAME),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
labs(title='Hospital Payments by Disease in Texas') +
labs(x=paste("PAYMENT"), y="Overpaid Amount") +
layer(data=overpaid,
mapping=aes(x=as.numeric(as.character(PAYMENT)), y=Overpaid_amt, color=MEASURE_NAME),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
View(overpaid)
ggplot(HSD, aes(x=PAYMENT, fill=cond)) + geom_density(alpha=.3)
ggplot(HSD, aes(x=PAYMENT, fill=MEASURE_NAME)) + geom_density(alpha=.3)
ggplot(HSD, aes(x=PAYMENT, fill=MEASURE_NAME), title="FOO") + geom_density(alpha=.3)
ggplot(hospitals, aes(x=MEASURE_NAME, y=PAYMENT, fill=MEASURE_NAME)) + geom_boxplot()
ggplot(hospitals, aes(x=MEASURE_NAME, y=PAYMENT, fill=MEASURE_NAME), scale_x_discrete(breaks=NULL)) + geom_boxplot()
ggplot(hospitals, aes(x=MEASURE_NAME, y=PAYMENT, fill=MEASURE_NAME)) + geom_boxplot() + scale_x_discrete(breaks=NULL)
ggplot(hospitals, aes(x=MEASURE_NAME, y=PAYMENT, fill=MEASURE_NAME)) + geom_boxplot() + scale_x_discrete(breaks=NULL) + labs(x="")
ggplot(hospitals, aes(x=MEASURE_NAME, y=PAYMENT, fill=MEASURE_NAME)) + geom_boxplot() + scale_x_discrete(breaks=NULL) + labs(x=NULL)
ggplot(hospitals, aes(x=MEASURE_NAME, y=PAYMENT, fill=MEASURE_NAME)) + geom_boxplot() + scale_x_discrete(breaks=NULL) + labs(x=NULL, color="TREATMENT TYPE")
ggplot(hospitals, aes(x=MEASURE_NAME, y=PAYMENT, fill=MEASURE_NAME)) + geom_boxplot() + scale_x_discrete(breaks=NULL) + labs(x=NULL, color=paste("TREATMENT TYPE"))
hospitals <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from hospitalpayments"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_ba7433', PASS='orcl_ba7433', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
hospitals3 <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from hospitalpayments"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_ba7433', PASS='orcl_ba7433', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
hospitals3 <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from hospitalpayments"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_ba7433', PASS='orcl_ba7433', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
gb <- hospitals %>% select(STATE,MEASURE_NAME,CATEGORY,PAYMENT,LOWER_ESTIMATE) %>% filter(CATEGORY == "Greater than the National Average Payment") %>% group_by(STATE) %>% mutate(Overpaid_amt = PAYMENT - LOWER_ESTIMATE) %>% summarise(Overpaid_mean = mean(Overpaid_amt)) %>% arrange(desc(Overpaid_mean)) %>% tbl_df
View(gb)
d <- diamonds %>% group_by(cut,color) %>% summarise(n = n()) %>% arrange(n) %>% tbl_df # Equivalent SQL: select cut, color, count(*) n from diamonds group by cut, color order by n;
View(d)
moop <- hospitals %>% group_by(state) %>% summarise(n = n()) %>% arrange(n) %>% tbl_df
moop <- hospitals %>% group_by(STATE) %>% summarise(n = n()) %>% arrange(n) %>% tbl_df
View(moop)
moop <- hospitals %>% group_by(STATE) %>% summarise(n = n()) %>% arrange(desc(n)) %>% tbl_df
View(moop)
expand_limits(x = states_map$long, y = states_map$lat)
states_map <- map_data("state")
ggplot(moop, aes(map_id = state))+
geom_map(aes(fill=n), map = states_map)+
expand_limits(x = states_map$long, y = states_map$lat)
states_map <- map_data("state")
ggplot(moop, aes(map_id = STATE))+
geom_map(aes(fill=n), map = states_map)+
expand_limits(x = states_map$long, y = states_map$lat)
View(states_map)
help(ggplot)
View(states_map)
geom_map(aes(fill=n), map = states_map)
View(moop)
states_map <- map_data("state")
ggplot(moop, aes(map_id = state)) +
geom_map(aes(fill = n), map = states_map, color ="black") +
expand_limits(x = states_map$long, y = states_map$lat) +
theme_few()+
theme(legend.position = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text =  element_blank()) +
scale_fill_gradient(low="white", high="blue") +
guides(fill = guide_colorbar(barwidth = 10, barheight = .5)) +
ggtitle("Choropleth Supreme Court")
require("ggthemes")
states_map <- map_data("state")
ggplot(moop, aes(map_id = state)) +
geom_map(aes(fill = n), map = states_map, color ="black") +
expand_limits(x = states_map$long, y = states_map$lat) +
theme_few()+
theme(legend.position = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text =  element_blank()) +
scale_fill_gradient(low="white", high="blue") +
guides(fill = guide_colorbar(barwidth = 10, barheight = .5)) +
ggtitle("Choropleth Supreme Court")
ggplot(moop, aes(map_id = STATE)) +
geom_map(aes(fill = n), map = states_map, color ="black") +
expand_limits(x = states_map$long, y = states_map$lat) +
theme_few()+
theme(legend.position = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text =  element_blank()) +
scale_fill_gradient(low="white", high="blue") +
guides(fill = guide_colorbar(barwidth = 10, barheight = .5)) +
ggtitle("Choropleth Supreme Court")
moop <- hospitals %>% group_by(STATE) %>% summarise(patients = n()) %>% arrange(desc(n)) %>% tbl_df
View(moop)
moop <- hospitals %>% group_by(STATE) %>% summarise(n = n()) %>% arrange(desc(n)) %>% tbl_df
moop <- hospitals %>% group_by(STATE)  %>% arrange(desc(n)) %>% tbl_df
moop <- hospitals %>% group_by(STATE)%>% arrange(desc(n)) %>% tbl_df
moop <- hospitals %>% group_by(STATE) %>% summarise(n = n()) %>% arrange(desc(n)) %>% tbl_df
**Bryan Amaefule, Kevin Lee, Shannon Lu**
hospitals3 <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from hospitalpayments"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_ba7433', PASS='orcl_ba7433', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
view(tbl_df)
hospitals3 <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from hospitalpayments"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_ba7433', PASS='orcl_ba7433', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
hospitals3 <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from hospitalpayments"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_ba7433', PASS='orcl_ba7433', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
hospitals2 <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from hospitalpayments"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_ba7433', PASS='orcl_ba7433', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
hospitals <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from hospitalpayments"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_ba7433', PASS='orcl_ba7433', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
hospitals <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from hospitalpayments"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_ba7433', PASS='orcl_ba7433', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
View(hospitals)
hospitals8 <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from hospitalpayments"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_ba7433', PASS='orcl_ba7433', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
